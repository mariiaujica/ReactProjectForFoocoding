{"ast":null,"code":"import { useState } from 'react';\nconst {\n  ShoppingCountState,\n  SetShoppingCount\n} = useState(CountItemsShoppingCart());\n\nfunction GetShoppingCart() {\n  var shoppingcartdata = sessionStorage.getItem(\"shopping_cart\");\n  var shoppingcart;\n\n  if (typeof shoppingcartdata == \"undefined\" || shoppingcartdata == \"undefined\") {\n    shoppingcart = [];\n  } else {\n    shoppingcart = JSON.parse(shoppingcartdata);\n  }\n\n  return shoppingcart;\n}\n\n_c = GetShoppingCart;\n\nfunction AddToCart(newProductID) {\n  var shoppingcart = GetShoppingCart();\n  var found = false;\n  shoppingcart.forEach(cartEntry => {\n    if (cartEntry.productID == newProductID) {\n      cartEntry.amount++;\n      found = true;\n    }\n  });\n\n  if (!found) {\n    var cartEntry = {\n      productID: newProductID,\n      amount: 1\n    };\n    shoppingcart.push(cartEntry);\n  }\n\n  sessionStorage.setItem(\"shopping_cart\", JSON.stringify(shoppingcart));\n  UpdateShoppingCountState();\n  return false;\n}\n\n_c2 = AddToCart;\n\nfunction EmptyShoppingCart() {\n  sessionStorage.setItem(\"shopping_cart\", undefined);\n  UpdateShoppingCountState();\n}\n\n_c3 = EmptyShoppingCart;\n\nfunction CountItemsShoppingCart() {\n  var shoppingcart = GetShoppingCart();\n  var count = 0;\n  shoppingcart.forEach(cartEntry => {\n    count = count + cartEntry.amount;\n  });\n  return count;\n}\n\n_c4 = CountItemsShoppingCart;\n\nfunction UpdateShoppingCountState() {\n  SetShoppingCount(CountItemsShoppingCart());\n}\n\n_c5 = UpdateShoppingCountState;\n\nfunction GetShoppingCountState() {\n  return ShoppingCountState;\n}\n\n_c6 = GetShoppingCountState;\nexport { AddToCart, GetShoppingCart, EmptyShoppingCart, CountItemsShoppingCart };\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"GetShoppingCart\");\n$RefreshReg$(_c2, \"AddToCart\");\n$RefreshReg$(_c3, \"EmptyShoppingCart\");\n$RefreshReg$(_c4, \"CountItemsShoppingCart\");\n$RefreshReg$(_c5, \"UpdateShoppingCountState\");\n$RefreshReg$(_c6, \"GetShoppingCountState\");","map":{"version":3,"names":["useState","ShoppingCountState","SetShoppingCount","CountItemsShoppingCart","GetShoppingCart","shoppingcartdata","sessionStorage","getItem","shoppingcart","JSON","parse","AddToCart","newProductID","found","forEach","cartEntry","productID","amount","push","setItem","stringify","UpdateShoppingCountState","EmptyShoppingCart","undefined","count","GetShoppingCountState"],"sources":["C:/Users/Mariia Ujica/code/ecommerce/src/shoppingCart.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nconst {ShoppingCountState, SetShoppingCount} = useState(CountItemsShoppingCart());\r\n\r\nfunction GetShoppingCart(){\r\n    var shoppingcartdata = sessionStorage.getItem(\"shopping_cart\");\r\n    var shoppingcart;\r\n\r\n    if (typeof(shoppingcartdata) == \"undefined\" || shoppingcartdata==\"undefined\"){\r\n        shoppingcart = [];\r\n    }\r\n    else\r\n    {\r\n        shoppingcart = JSON.parse(shoppingcartdata);\r\n    }\r\n\r\n    return shoppingcart;\r\n}\r\n\r\nfunction AddToCart(newProductID){\r\n    var shoppingcart = GetShoppingCart();\r\n\r\n    var found = false;\r\n    shoppingcart.forEach(cartEntry => {\r\n        if(cartEntry.productID == newProductID){\r\n            cartEntry.amount++;\r\n            found = true;\r\n        }\r\n    });\r\n\r\n    if (!found){\r\n        var cartEntry = {\r\n            productID : newProductID,\r\n            amount:1\r\n        };\r\n        shoppingcart.push(cartEntry);\r\n    }\r\n    \r\n    sessionStorage.setItem(\"shopping_cart\", JSON.stringify(shoppingcart));\r\n    UpdateShoppingCountState();\r\n    return false;\r\n}\r\n\r\nfunction EmptyShoppingCart(){\r\n    sessionStorage.setItem(\"shopping_cart\", undefined);\r\n    UpdateShoppingCountState();\r\n}\r\n\r\nfunction CountItemsShoppingCart(){\r\n    var shoppingcart = GetShoppingCart();\r\n    var count = 0;\r\n    shoppingcart.forEach(cartEntry => {\r\n        count = count + cartEntry.amount;\r\n    });\r\n    return count;\r\n}\r\n\r\nfunction UpdateShoppingCountState(){\r\n    SetShoppingCount(CountItemsShoppingCart());\r\n}\r\n\r\nfunction GetShoppingCountState(){\r\n    return ShoppingCountState;\r\n}\r\n\r\nexport {AddToCart, GetShoppingCart, EmptyShoppingCart, CountItemsShoppingCart};"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,MAAM;EAACC,kBAAD;EAAqBC;AAArB,IAAyCF,QAAQ,CAACG,sBAAsB,EAAvB,CAAvD;;AAEA,SAASC,eAAT,GAA0B;EACtB,IAAIC,gBAAgB,GAAGC,cAAc,CAACC,OAAf,CAAuB,eAAvB,CAAvB;EACA,IAAIC,YAAJ;;EAEA,IAAI,OAAOH,gBAAP,IAA4B,WAA5B,IAA2CA,gBAAgB,IAAE,WAAjE,EAA6E;IACzEG,YAAY,GAAG,EAAf;EACH,CAFD,MAIA;IACIA,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWL,gBAAX,CAAf;EACH;;EAED,OAAOG,YAAP;AACH;;KAbQJ,e;;AAeT,SAASO,SAAT,CAAmBC,YAAnB,EAAgC;EAC5B,IAAIJ,YAAY,GAAGJ,eAAe,EAAlC;EAEA,IAAIS,KAAK,GAAG,KAAZ;EACAL,YAAY,CAACM,OAAb,CAAqBC,SAAS,IAAI;IAC9B,IAAGA,SAAS,CAACC,SAAV,IAAuBJ,YAA1B,EAAuC;MACnCG,SAAS,CAACE,MAAV;MACAJ,KAAK,GAAG,IAAR;IACH;EACJ,CALD;;EAOA,IAAI,CAACA,KAAL,EAAW;IACP,IAAIE,SAAS,GAAG;MACZC,SAAS,EAAGJ,YADA;MAEZK,MAAM,EAAC;IAFK,CAAhB;IAIAT,YAAY,CAACU,IAAb,CAAkBH,SAAlB;EACH;;EAEDT,cAAc,CAACa,OAAf,CAAuB,eAAvB,EAAwCV,IAAI,CAACW,SAAL,CAAeZ,YAAf,CAAxC;EACAa,wBAAwB;EACxB,OAAO,KAAP;AACH;;MAtBQV,S;;AAwBT,SAASW,iBAAT,GAA4B;EACxBhB,cAAc,CAACa,OAAf,CAAuB,eAAvB,EAAwCI,SAAxC;EACAF,wBAAwB;AAC3B;;MAHQC,iB;;AAKT,SAASnB,sBAAT,GAAiC;EAC7B,IAAIK,YAAY,GAAGJ,eAAe,EAAlC;EACA,IAAIoB,KAAK,GAAG,CAAZ;EACAhB,YAAY,CAACM,OAAb,CAAqBC,SAAS,IAAI;IAC9BS,KAAK,GAAGA,KAAK,GAAGT,SAAS,CAACE,MAA1B;EACH,CAFD;EAGA,OAAOO,KAAP;AACH;;MAPQrB,sB;;AAST,SAASkB,wBAAT,GAAmC;EAC/BnB,gBAAgB,CAACC,sBAAsB,EAAvB,CAAhB;AACH;;MAFQkB,wB;;AAIT,SAASI,qBAAT,GAAgC;EAC5B,OAAOxB,kBAAP;AACH;;MAFQwB,qB;AAIT,SAAQd,SAAR,EAAmBP,eAAnB,EAAoCkB,iBAApC,EAAuDnB,sBAAvD"},"metadata":{},"sourceType":"module"}